<?xml version="1.0" encoding="UTF-8"?>

<zk xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:c="http://www.zkoss.org/2005/zk/client"
    xmlns="http://www.zkoss.org/2005/zul"
    xsi:schemaLocation="http://www.zkoss.org/2005/zul http://www.zkoss.org/2005/zul/zul.xsd">

    <panel vflex="true" apply="org.web4thejob.studio.controller.impl.CodeController" border="normal">
        <panelchildren>
            <textbox id="zulBox" multiline="true" focus="true">
                <attribute c:name="bind_">
                    <![CDATA[
                        function (a, b, c) {
                            this.$bind_(a, b, c);
                            var wgt = this;


                            CodeMirror.defineMode("multi", function(config) {
                              return CodeMirror.multiplexingMode(
                                CodeMirror.getMode(config, 'xml'),
                                {open: /<script\s*.*>/, close: /<\/script>/, mode: CodeMirror.getMode(config, "javascript"), delimStyle: "code-block"},
                                {open: /<html\s*.*>/, close: /<\/html>/, mode: CodeMirror.getMode(config, "text/html"), delimStyle: "code-block"},
                                {open: /<style\s*.*>/, close: /<\/style>/, mode: CodeMirror.getMode(config, "css"), delimStyle: "code-block"},
                                {open: /<zscript\s*.*>/, close: /<\/zscript>/, mode: CodeMirror.getMode(config, "text/x-java"), delimStyle: "code-block"},
                                {open: /<attribute\s+.*:name="\w+">/, close: /<\/attribute>/, mode: CodeMirror.getMode(config, "javascript"), delimStyle: "code-block"},
                                {open: /<attribute\s+name="\w+">/, close: /<\/attribute>/, mode: CodeMirror.getMode(config, "text/x-java"), delimStyle: "code-block"}
                              );
                            });

                            myCodeMirror = CodeMirror.fromTextArea(this.$n(),
                                    {mode: 'multi',
                                    lineNumbers: true,
                                    autofocus: true,
                                    foldGutter: true,
                                    gutters: ["CodeMirror-linenumbers", "CodeMirror-foldgutter"],
                                    matchTags: {bothTags: true},
                                    autoCloseTags: true,
                                    autoCloseBrackets: true,
                                    lint: true,
                                    extraKeys: {"'<'": completeAfter,
                                                "'/'": completeIfAfterLt,
                                                "' '": completeIfInTag,
                                                "'='": completeIfInTag,
                                                'Ctrl-Space': function(cm) {CodeMirror.showHint(cm, CodeMirror.hint.xml, {schemaInfo: tags});},
                                                'Ctrl-J': 'toMatchingTag'
                                               }
                                        }
                                    );

                            wgt.set("codemirror",myCodeMirror);

                            myCodeMirror.on('change', function () {
                                jq(".splash").remove();
                                var val = myCodeMirror.getValue();
                                var txt = wgt.$n().value;
                                if (val!=txt){
                                    wgt.$n().value = val;
                                    wgt.fire('onChange', {value: val}, {toServer: true});
                                }
                            });

                            myCodeMirror.on('cursorActivity', function (cm) {
                                var pos=cm.getCursor();
                                if (pos.line==0 && pos.ch==0) return;

                                if (!cm.lastCursorPosition || pos.line!=cm.lastCursorPosition.line) {
                                    if (cm.getLine(pos.line).trim().substring(0,1)=='<'){
                                        w4tjStudioDesigner.propertyEditorBusy();
                                        zAu.send(new zk.Event(wgt, 'onZulCodeClick', myCodeMirror.getCursor()));
                                    }
                                }

                                cm.lastCursorPosition = pos;
                            });

                        }
                    ]]>
                </attribute>
                <attribute c:name="setValue">
                    <![CDATA[
                        function (a, b) {
                            this.$setValue(a, b);
                            if (this.get("codemirror")){
                                this.get("codemirror").setValue(a);
                            }
                        }
                    ]]>
                </attribute>
            </textbox>
        </panelchildren>
    </panel>

    <style>
        .cm-code-block {font-style: italic; color: rgb(202, 0, 195);}
    </style>
</zk>